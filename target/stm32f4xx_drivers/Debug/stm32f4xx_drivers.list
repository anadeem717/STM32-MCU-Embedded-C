
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000528  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006ec  080006f4  000016f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006ec  080006ec  000016f4  2**0
                  CONTENTS
  4 .ARM          00000000  080006ec  080006ec  000016f4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006ec  080006f4  000016f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006ec  080006ec  000016ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080006f0  080006f0  000016f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000016f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080006f4  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080006f4  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000016f4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000086c  00000000  00000000  00001724  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000261  00000000  00000000  00001f90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000a8  00000000  00000000  000021f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000072  00000000  00000000  000022a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001437  00000000  00000000  00002312  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000d0f  00000000  00000000  00003749  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005770  00000000  00000000  00004458  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00009bc8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d4  00000000  00000000  00009c0c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007a  00000000  00000000  00009de0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080006d4 	.word	0x080006d4

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080006d4 	.word	0x080006d4

08000204 <delay>:
#include "stmf446xx.h"

#define LOW 0
#define BTN_PRESSED LOW

void delay(void) {
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 500000; i++);
 800020a:	2300      	movs	r3, #0
 800020c:	607b      	str	r3, [r7, #4]
 800020e:	e002      	b.n	8000216 <delay+0x12>
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	3301      	adds	r3, #1
 8000214:	607b      	str	r3, [r7, #4]
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a04      	ldr	r2, [pc, #16]	@ (800022c <delay+0x28>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d9f8      	bls.n	8000210 <delay+0xc>
}
 800021e:	bf00      	nop
 8000220:	bf00      	nop
 8000222:	370c      	adds	r7, #12
 8000224:	46bd      	mov	sp, r7
 8000226:	f85d 7b04 	ldr.w	r7, [sp], #4
 800022a:	4770      	bx	lr
 800022c:	0007a11f 	.word	0x0007a11f

08000230 <main>:

int main(void)
{
 8000230:	b580      	push	{r7, lr}
 8000232:	b086      	sub	sp, #24
 8000234:	af00      	add	r7, sp, #0
    // 1) Enable clock to GPIOA
    GPIO_PeriClockControl(GPIOA, ENABLE);
 8000236:	2101      	movs	r1, #1
 8000238:	4819      	ldr	r0, [pc, #100]	@ (80002a0 <main+0x70>)
 800023a:	f000 f85f 	bl	80002fc <GPIO_PeriClockControl>
    GPIO_PeriClockControl(GPIOC, ENABLE);
 800023e:	2101      	movs	r1, #1
 8000240:	4818      	ldr	r0, [pc, #96]	@ (80002a4 <main+0x74>)
 8000242:	f000 f85b 	bl	80002fc <GPIO_PeriClockControl>

    // 2) Configure PA5
    GPIO_Handle_t GPIOLed, GPIOBtn;
    GPIOLed.pGPIOx = GPIOA;
 8000246:	4b16      	ldr	r3, [pc, #88]	@ (80002a0 <main+0x70>)
 8000248:	60fb      	str	r3, [r7, #12]
    GPIOLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800024a:	2305      	movs	r3, #5
 800024c:	743b      	strb	r3, [r7, #16]
    GPIOLed.GPIO_PinConfig.GPIO_PinMode   = GPIO_MODE_OUT;
 800024e:	2301      	movs	r3, #1
 8000250:	74bb      	strb	r3, [r7, #18]
    GPIOLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000252:	2300      	movs	r3, #0
 8000254:	753b      	strb	r3, [r7, #20]
    GPIOLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000256:	2300      	movs	r3, #0
 8000258:	74fb      	strb	r3, [r7, #19]
    GPIOLed.GPIO_PinConfig.GPIO_PinSpeed  = GPIO_SPEED_FAST;
 800025a:	2300      	movs	r3, #0
 800025c:	747b      	strb	r3, [r7, #17]

    GPIO_Init(&GPIOLed);
 800025e:	f107 030c 	add.w	r3, r7, #12
 8000262:	4618      	mov	r0, r3
 8000264:	f000 f91a 	bl	800049c <GPIO_Init>

	GPIOBtn.pGPIOx = GPIOC;
 8000268:	4b0e      	ldr	r3, [pc, #56]	@ (80002a4 <main+0x74>)
 800026a:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 800026c:	230d      	movs	r3, #13
 800026e:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode   = GPIO_MODE_IN;
 8000270:	2300      	movs	r3, #0
 8000272:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000274:	2300      	movs	r3, #0
 8000276:	71fb      	strb	r3, [r7, #7]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed  = GPIO_SPEED_FAST;
 8000278:	2300      	movs	r3, #0
 800027a:	717b      	strb	r3, [r7, #5]

	GPIO_Init(&GPIOBtn);
 800027c:	463b      	mov	r3, r7
 800027e:	4618      	mov	r0, r3
 8000280:	f000 f90c 	bl	800049c <GPIO_Init>


    while (1) {
    	if (GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13) == BTN_PRESSED) {
 8000284:	210d      	movs	r1, #13
 8000286:	4807      	ldr	r0, [pc, #28]	@ (80002a4 <main+0x74>)
 8000288:	f000 f9d5 	bl	8000636 <GPIO_ReadFromInputPin>
 800028c:	4603      	mov	r3, r0
 800028e:	2b00      	cmp	r3, #0
 8000290:	d1f8      	bne.n	8000284 <main+0x54>
    		delay();
 8000292:	f7ff ffb7 	bl	8000204 <delay>
    		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 8000296:	2105      	movs	r1, #5
 8000298:	4801      	ldr	r0, [pc, #4]	@ (80002a0 <main+0x70>)
 800029a:	f000 f9e2 	bl	8000662 <GPIO_ToggleOutputPin>
    	if (GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13) == BTN_PRESSED) {
 800029e:	e7f1      	b.n	8000284 <main+0x54>
 80002a0:	40020000 	.word	0x40020000
 80002a4:	40020800 	.word	0x40020800

080002a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a8:	480d      	ldr	r0, [pc, #52]	@ (80002e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002aa:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002ac:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b0:	480c      	ldr	r0, [pc, #48]	@ (80002e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002b2:	490d      	ldr	r1, [pc, #52]	@ (80002e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b4:	4a0d      	ldr	r2, [pc, #52]	@ (80002ec <LoopForever+0xe>)
  movs r3, #0
 80002b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b8:	e002      	b.n	80002c0 <LoopCopyDataInit>

080002ba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002be:	3304      	adds	r3, #4

080002c0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002c2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c4:	d3f9      	bcc.n	80002ba <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002c6:	4a0a      	ldr	r2, [pc, #40]	@ (80002f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c8:	4c0a      	ldr	r4, [pc, #40]	@ (80002f4 <LoopForever+0x16>)
  movs r3, #0
 80002ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002cc:	e001      	b.n	80002d2 <LoopFillZerobss>

080002ce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d0:	3204      	adds	r2, #4

080002d2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d4:	d3fb      	bcc.n	80002ce <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002d6:	f000 f9d9 	bl	800068c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002da:	f7ff ffa9 	bl	8000230 <main>

080002de <LoopForever>:

LoopForever:
  b LoopForever
 80002de:	e7fe      	b.n	80002de <LoopForever>
  ldr   r0, =_estack
 80002e0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002ec:	080006f4 	.word	0x080006f4
  ldr r2, =_sbss
 80002f0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f4:	2000001c 	.word	0x2000001c

080002f8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f8:	e7fe      	b.n	80002f8 <ADC_IRQHandler>
	...

080002fc <GPIO_PeriClockControl>:
 * enables or disables peripheral clock for the given GPIO port
 * @param - base addr of GPIO peripheral
 * @param - ENABLE or DISABLE MACROS
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002fc:	b480      	push	{r7}
 80002fe:	b083      	sub	sp, #12
 8000300:	af00      	add	r7, sp, #0
 8000302:	6078      	str	r0, [r7, #4]
 8000304:	460b      	mov	r3, r1
 8000306:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE)
 8000308:	78fb      	ldrb	r3, [r7, #3]
 800030a:	2b01      	cmp	r3, #1
 800030c:	d157      	bne.n	80003be <GPIO_PeriClockControl+0xc2>
	{
		if (pGPIOx == GPIOA) {
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a59      	ldr	r2, [pc, #356]	@ (8000478 <GPIO_PeriClockControl+0x17c>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 8000316:	4b59      	ldr	r3, [pc, #356]	@ (800047c <GPIO_PeriClockControl+0x180>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800031a:	4a58      	ldr	r2, [pc, #352]	@ (800047c <GPIO_PeriClockControl+0x180>)
 800031c:	f043 0301 	orr.w	r3, r3, #1
 8000320:	6313      	str	r3, [r2, #48]	@ 0x30

		else if (pGPIOx == GPIOH) {
			GPIOH_PCLK_DI();
		}
	}
}
 8000322:	e0a3      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOB) {
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a56      	ldr	r2, [pc, #344]	@ (8000480 <GPIO_PeriClockControl+0x184>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d106      	bne.n	800033a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 800032c:	4b53      	ldr	r3, [pc, #332]	@ (800047c <GPIO_PeriClockControl+0x180>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000330:	4a52      	ldr	r2, [pc, #328]	@ (800047c <GPIO_PeriClockControl+0x180>)
 8000332:	f043 0302 	orr.w	r3, r3, #2
 8000336:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000338:	e098      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOC) {
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4a51      	ldr	r2, [pc, #324]	@ (8000484 <GPIO_PeriClockControl+0x188>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d106      	bne.n	8000350 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000342:	4b4e      	ldr	r3, [pc, #312]	@ (800047c <GPIO_PeriClockControl+0x180>)
 8000344:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000346:	4a4d      	ldr	r2, [pc, #308]	@ (800047c <GPIO_PeriClockControl+0x180>)
 8000348:	f043 0304 	orr.w	r3, r3, #4
 800034c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800034e:	e08d      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOD) {
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	4a4d      	ldr	r2, [pc, #308]	@ (8000488 <GPIO_PeriClockControl+0x18c>)
 8000354:	4293      	cmp	r3, r2
 8000356:	d106      	bne.n	8000366 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000358:	4b48      	ldr	r3, [pc, #288]	@ (800047c <GPIO_PeriClockControl+0x180>)
 800035a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800035c:	4a47      	ldr	r2, [pc, #284]	@ (800047c <GPIO_PeriClockControl+0x180>)
 800035e:	f043 0308 	orr.w	r3, r3, #8
 8000362:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000364:	e082      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOE) {
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	4a48      	ldr	r2, [pc, #288]	@ (800048c <GPIO_PeriClockControl+0x190>)
 800036a:	4293      	cmp	r3, r2
 800036c:	d106      	bne.n	800037c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800036e:	4b43      	ldr	r3, [pc, #268]	@ (800047c <GPIO_PeriClockControl+0x180>)
 8000370:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000372:	4a42      	ldr	r2, [pc, #264]	@ (800047c <GPIO_PeriClockControl+0x180>)
 8000374:	f043 0310 	orr.w	r3, r3, #16
 8000378:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800037a:	e077      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOF) {
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	4a44      	ldr	r2, [pc, #272]	@ (8000490 <GPIO_PeriClockControl+0x194>)
 8000380:	4293      	cmp	r3, r2
 8000382:	d106      	bne.n	8000392 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000384:	4b3d      	ldr	r3, [pc, #244]	@ (800047c <GPIO_PeriClockControl+0x180>)
 8000386:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000388:	4a3c      	ldr	r2, [pc, #240]	@ (800047c <GPIO_PeriClockControl+0x180>)
 800038a:	f043 0320 	orr.w	r3, r3, #32
 800038e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000390:	e06c      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOG) {
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	4a3f      	ldr	r2, [pc, #252]	@ (8000494 <GPIO_PeriClockControl+0x198>)
 8000396:	4293      	cmp	r3, r2
 8000398:	d106      	bne.n	80003a8 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800039a:	4b38      	ldr	r3, [pc, #224]	@ (800047c <GPIO_PeriClockControl+0x180>)
 800039c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800039e:	4a37      	ldr	r2, [pc, #220]	@ (800047c <GPIO_PeriClockControl+0x180>)
 80003a0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80003a4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003a6:	e061      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOH) {
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	4a3b      	ldr	r2, [pc, #236]	@ (8000498 <GPIO_PeriClockControl+0x19c>)
 80003ac:	4293      	cmp	r3, r2
 80003ae:	d15d      	bne.n	800046c <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 80003b0:	4b32      	ldr	r3, [pc, #200]	@ (800047c <GPIO_PeriClockControl+0x180>)
 80003b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003b4:	4a31      	ldr	r2, [pc, #196]	@ (800047c <GPIO_PeriClockControl+0x180>)
 80003b6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80003ba:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003bc:	e056      	b.n	800046c <GPIO_PeriClockControl+0x170>
		if (pGPIOx == GPIOA) {
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	4a2d      	ldr	r2, [pc, #180]	@ (8000478 <GPIO_PeriClockControl+0x17c>)
 80003c2:	4293      	cmp	r3, r2
 80003c4:	d106      	bne.n	80003d4 <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DI();
 80003c6:	4b2d      	ldr	r3, [pc, #180]	@ (800047c <GPIO_PeriClockControl+0x180>)
 80003c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ca:	4a2c      	ldr	r2, [pc, #176]	@ (800047c <GPIO_PeriClockControl+0x180>)
 80003cc:	f023 0301 	bic.w	r3, r3, #1
 80003d0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003d2:	e04b      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOB) {
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	4a2a      	ldr	r2, [pc, #168]	@ (8000480 <GPIO_PeriClockControl+0x184>)
 80003d8:	4293      	cmp	r3, r2
 80003da:	d106      	bne.n	80003ea <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DI();
 80003dc:	4b27      	ldr	r3, [pc, #156]	@ (800047c <GPIO_PeriClockControl+0x180>)
 80003de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003e0:	4a26      	ldr	r2, [pc, #152]	@ (800047c <GPIO_PeriClockControl+0x180>)
 80003e2:	f023 0302 	bic.w	r3, r3, #2
 80003e6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003e8:	e040      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOC) {
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	4a25      	ldr	r2, [pc, #148]	@ (8000484 <GPIO_PeriClockControl+0x188>)
 80003ee:	4293      	cmp	r3, r2
 80003f0:	d106      	bne.n	8000400 <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DI();
 80003f2:	4b22      	ldr	r3, [pc, #136]	@ (800047c <GPIO_PeriClockControl+0x180>)
 80003f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003f6:	4a21      	ldr	r2, [pc, #132]	@ (800047c <GPIO_PeriClockControl+0x180>)
 80003f8:	f023 0304 	bic.w	r3, r3, #4
 80003fc:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003fe:	e035      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOD) {
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	4a21      	ldr	r2, [pc, #132]	@ (8000488 <GPIO_PeriClockControl+0x18c>)
 8000404:	4293      	cmp	r3, r2
 8000406:	d106      	bne.n	8000416 <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DI();
 8000408:	4b1c      	ldr	r3, [pc, #112]	@ (800047c <GPIO_PeriClockControl+0x180>)
 800040a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800040c:	4a1b      	ldr	r2, [pc, #108]	@ (800047c <GPIO_PeriClockControl+0x180>)
 800040e:	f023 0308 	bic.w	r3, r3, #8
 8000412:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000414:	e02a      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOE) {
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	4a1c      	ldr	r2, [pc, #112]	@ (800048c <GPIO_PeriClockControl+0x190>)
 800041a:	4293      	cmp	r3, r2
 800041c:	d106      	bne.n	800042c <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DI();
 800041e:	4b17      	ldr	r3, [pc, #92]	@ (800047c <GPIO_PeriClockControl+0x180>)
 8000420:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000422:	4a16      	ldr	r2, [pc, #88]	@ (800047c <GPIO_PeriClockControl+0x180>)
 8000424:	f023 0310 	bic.w	r3, r3, #16
 8000428:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800042a:	e01f      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOF) {
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	4a18      	ldr	r2, [pc, #96]	@ (8000490 <GPIO_PeriClockControl+0x194>)
 8000430:	4293      	cmp	r3, r2
 8000432:	d106      	bne.n	8000442 <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DI();
 8000434:	4b11      	ldr	r3, [pc, #68]	@ (800047c <GPIO_PeriClockControl+0x180>)
 8000436:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000438:	4a10      	ldr	r2, [pc, #64]	@ (800047c <GPIO_PeriClockControl+0x180>)
 800043a:	f023 0320 	bic.w	r3, r3, #32
 800043e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000440:	e014      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOG) {
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	4a13      	ldr	r2, [pc, #76]	@ (8000494 <GPIO_PeriClockControl+0x198>)
 8000446:	4293      	cmp	r3, r2
 8000448:	d106      	bne.n	8000458 <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DI();
 800044a:	4b0c      	ldr	r3, [pc, #48]	@ (800047c <GPIO_PeriClockControl+0x180>)
 800044c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800044e:	4a0b      	ldr	r2, [pc, #44]	@ (800047c <GPIO_PeriClockControl+0x180>)
 8000450:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000454:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000456:	e009      	b.n	800046c <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOH) {
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	4a0f      	ldr	r2, [pc, #60]	@ (8000498 <GPIO_PeriClockControl+0x19c>)
 800045c:	4293      	cmp	r3, r2
 800045e:	d105      	bne.n	800046c <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DI();
 8000460:	4b06      	ldr	r3, [pc, #24]	@ (800047c <GPIO_PeriClockControl+0x180>)
 8000462:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000464:	4a05      	ldr	r2, [pc, #20]	@ (800047c <GPIO_PeriClockControl+0x180>)
 8000466:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800046a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800046c:	bf00      	nop
 800046e:	370c      	adds	r7, #12
 8000470:	46bd      	mov	sp, r7
 8000472:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000476:	4770      	bx	lr
 8000478:	40020000 	.word	0x40020000
 800047c:	40023800 	.word	0x40023800
 8000480:	40020400 	.word	0x40020400
 8000484:	40020800 	.word	0x40020800
 8000488:	40020c00 	.word	0x40020c00
 800048c:	40021000 	.word	0x40021000
 8000490:	40021400 	.word	0x40021400
 8000494:	40021800 	.word	0x40021800
 8000498:	40021c00 	.word	0x40021c00

0800049c <GPIO_Init>:
/*
 * initializes GPIO peripheral
 * @param - GPIO handler struct
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800049c:	b480      	push	{r7}
 800049e:	b085      	sub	sp, #20
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	6078      	str	r0, [r7, #4]
	// configure mode of gpio pin
	uint32_t temp = 0;
 80004a4:	2300      	movs	r3, #0
 80004a6:	60fb      	str	r3, [r7, #12]

	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	799b      	ldrb	r3, [r3, #6]
 80004ac:	2b03      	cmp	r3, #3
 80004ae:	d81e      	bhi.n	80004ee <GPIO_Init+0x52>
		// non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	799b      	ldrb	r3, [r3, #6]
 80004b4:	461a      	mov	r2, r3
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	791b      	ldrb	r3, [r3, #4]
 80004ba:	005b      	lsls	r3, r3, #1
 80004bc:	fa02 f303 	lsl.w	r3, r2, r3
 80004c0:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	681a      	ldr	r2, [r3, #0]
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	791b      	ldrb	r3, [r3, #4]
 80004cc:	4619      	mov	r1, r3
 80004ce:	2303      	movs	r3, #3
 80004d0:	408b      	lsls	r3, r1
 80004d2:	43db      	mvns	r3, r3
 80004d4:	4619      	mov	r1, r3
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	400a      	ands	r2, r1
 80004dc:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	6819      	ldr	r1, [r3, #0]
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	68fa      	ldr	r2, [r7, #12]
 80004ea:	430a      	orrs	r2, r1
 80004ec:	601a      	str	r2, [r3, #0]
	}
	else {
		// interrupt mode
	}

	temp = 0;
 80004ee:	2300      	movs	r3, #0
 80004f0:	60fb      	str	r3, [r7, #12]

	// configure speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	795b      	ldrb	r3, [r3, #5]
 80004f6:	461a      	mov	r2, r3
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	791b      	ldrb	r3, [r3, #4]
 80004fc:	005b      	lsls	r3, r3, #1
 80004fe:	fa02 f303 	lsl.w	r3, r2, r3
 8000502:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	689a      	ldr	r2, [r3, #8]
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	791b      	ldrb	r3, [r3, #4]
 800050e:	4619      	mov	r1, r3
 8000510:	2303      	movs	r3, #3
 8000512:	408b      	lsls	r3, r1
 8000514:	43db      	mvns	r3, r3
 8000516:	4619      	mov	r1, r3
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	400a      	ands	r2, r1
 800051e:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	6899      	ldr	r1, [r3, #8]
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	68fa      	ldr	r2, [r7, #12]
 800052c:	430a      	orrs	r2, r1
 800052e:	609a      	str	r2, [r3, #8]

	temp = 0;
 8000530:	2300      	movs	r3, #0
 8000532:	60fb      	str	r3, [r7, #12]

	// configure pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	79db      	ldrb	r3, [r3, #7]
 8000538:	461a      	mov	r2, r3
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	791b      	ldrb	r3, [r3, #4]
 800053e:	005b      	lsls	r3, r3, #1
 8000540:	fa02 f303 	lsl.w	r3, r2, r3
 8000544:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	68da      	ldr	r2, [r3, #12]
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	791b      	ldrb	r3, [r3, #4]
 8000550:	4619      	mov	r1, r3
 8000552:	2303      	movs	r3, #3
 8000554:	408b      	lsls	r3, r1
 8000556:	43db      	mvns	r3, r3
 8000558:	4619      	mov	r1, r3
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	400a      	ands	r2, r1
 8000560:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	68d9      	ldr	r1, [r3, #12]
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	68fa      	ldr	r2, [r7, #12]
 800056e:	430a      	orrs	r2, r1
 8000570:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000572:	2300      	movs	r3, #0
 8000574:	60fb      	str	r3, [r7, #12]

	// configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	7a1b      	ldrb	r3, [r3, #8]
 800057a:	461a      	mov	r2, r3
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	791b      	ldrb	r3, [r3, #4]
 8000580:	fa02 f303 	lsl.w	r3, r2, r3
 8000584:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	681b      	ldr	r3, [r3, #0]
 800058a:	685a      	ldr	r2, [r3, #4]
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	791b      	ldrb	r3, [r3, #4]
 8000590:	4619      	mov	r1, r3
 8000592:	2301      	movs	r3, #1
 8000594:	408b      	lsls	r3, r1
 8000596:	43db      	mvns	r3, r3
 8000598:	4619      	mov	r1, r3
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	681b      	ldr	r3, [r3, #0]
 800059e:	400a      	ands	r2, r1
 80005a0:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	6859      	ldr	r1, [r3, #4]
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	68fa      	ldr	r2, [r7, #12]
 80005ae:	430a      	orrs	r2, r1
 80005b0:	605a      	str	r2, [r3, #4]

	temp = 0;
 80005b2:	2300      	movs	r3, #0
 80005b4:	60fb      	str	r3, [r7, #12]

	// configure the alt functionality
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	799b      	ldrb	r3, [r3, #6]
 80005ba:	2b02      	cmp	r3, #2
 80005bc:	d135      	bne.n	800062a <GPIO_Init+0x18e>
		// configure alt function registers
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	791b      	ldrb	r3, [r3, #4]
 80005c2:	08db      	lsrs	r3, r3, #3
 80005c4:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	791b      	ldrb	r3, [r3, #4]
 80005ca:	f003 0307 	and.w	r3, r3, #7
 80005ce:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	681a      	ldr	r2, [r3, #0]
 80005d4:	7afb      	ldrb	r3, [r7, #11]
 80005d6:	3308      	adds	r3, #8
 80005d8:	009b      	lsls	r3, r3, #2
 80005da:	4413      	add	r3, r2
 80005dc:	685a      	ldr	r2, [r3, #4]
 80005de:	7abb      	ldrb	r3, [r7, #10]
 80005e0:	009b      	lsls	r3, r3, #2
 80005e2:	210f      	movs	r1, #15
 80005e4:	fa01 f303 	lsl.w	r3, r1, r3
 80005e8:	43db      	mvns	r3, r3
 80005ea:	4618      	mov	r0, r3
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	6819      	ldr	r1, [r3, #0]
 80005f0:	7afb      	ldrb	r3, [r7, #11]
 80005f2:	4002      	ands	r2, r0
 80005f4:	3308      	adds	r3, #8
 80005f6:	009b      	lsls	r3, r3, #2
 80005f8:	440b      	add	r3, r1
 80005fa:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2);
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	681a      	ldr	r2, [r3, #0]
 8000600:	7afb      	ldrb	r3, [r7, #11]
 8000602:	3308      	adds	r3, #8
 8000604:	009b      	lsls	r3, r3, #2
 8000606:	4413      	add	r3, r2
 8000608:	685a      	ldr	r2, [r3, #4]
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	7a5b      	ldrb	r3, [r3, #9]
 800060e:	4619      	mov	r1, r3
 8000610:	7abb      	ldrb	r3, [r7, #10]
 8000612:	009b      	lsls	r3, r3, #2
 8000614:	fa01 f303 	lsl.w	r3, r1, r3
 8000618:	4618      	mov	r0, r3
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	6819      	ldr	r1, [r3, #0]
 800061e:	7afb      	ldrb	r3, [r7, #11]
 8000620:	4302      	orrs	r2, r0
 8000622:	3308      	adds	r3, #8
 8000624:	009b      	lsls	r3, r3, #2
 8000626:	440b      	add	r3, r1
 8000628:	605a      	str	r2, [r3, #4]
	}
}
 800062a:	bf00      	nop
 800062c:	3714      	adds	r7, #20
 800062e:	46bd      	mov	sp, r7
 8000630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000634:	4770      	bx	lr

08000636 <GPIO_ReadFromInputPin>:
 * @param 	- pin number
 *
 * @return 	- 0 or 1
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000636:	b480      	push	{r7}
 8000638:	b085      	sub	sp, #20
 800063a:	af00      	add	r7, sp, #0
 800063c:	6078      	str	r0, [r7, #4]
 800063e:	460b      	mov	r3, r1
 8000640:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	691a      	ldr	r2, [r3, #16]
 8000646:	78fb      	ldrb	r3, [r7, #3]
 8000648:	fa22 f303 	lsr.w	r3, r2, r3
 800064c:	b2db      	uxtb	r3, r3
 800064e:	f003 0301 	and.w	r3, r3, #1
 8000652:	73fb      	strb	r3, [r7, #15]
	return value;
 8000654:	7bfb      	ldrb	r3, [r7, #15]
}
 8000656:	4618      	mov	r0, r3
 8000658:	3714      	adds	r7, #20
 800065a:	46bd      	mov	sp, r7
 800065c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000660:	4770      	bx	lr

08000662 <GPIO_ToggleOutputPin>:
	pGPIOx->ODR = value;
}


void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000662:	b480      	push	{r7}
 8000664:	b083      	sub	sp, #12
 8000666:	af00      	add	r7, sp, #0
 8000668:	6078      	str	r0, [r7, #4]
 800066a:	460b      	mov	r3, r1
 800066c:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	695b      	ldr	r3, [r3, #20]
 8000672:	78fa      	ldrb	r2, [r7, #3]
 8000674:	2101      	movs	r1, #1
 8000676:	fa01 f202 	lsl.w	r2, r1, r2
 800067a:	405a      	eors	r2, r3
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	615a      	str	r2, [r3, #20]
}
 8000680:	bf00      	nop
 8000682:	370c      	adds	r7, #12
 8000684:	46bd      	mov	sp, r7
 8000686:	f85d 7b04 	ldr.w	r7, [sp], #4
 800068a:	4770      	bx	lr

0800068c <__libc_init_array>:
 800068c:	b570      	push	{r4, r5, r6, lr}
 800068e:	4d0d      	ldr	r5, [pc, #52]	@ (80006c4 <__libc_init_array+0x38>)
 8000690:	4c0d      	ldr	r4, [pc, #52]	@ (80006c8 <__libc_init_array+0x3c>)
 8000692:	1b64      	subs	r4, r4, r5
 8000694:	10a4      	asrs	r4, r4, #2
 8000696:	2600      	movs	r6, #0
 8000698:	42a6      	cmp	r6, r4
 800069a:	d109      	bne.n	80006b0 <__libc_init_array+0x24>
 800069c:	4d0b      	ldr	r5, [pc, #44]	@ (80006cc <__libc_init_array+0x40>)
 800069e:	4c0c      	ldr	r4, [pc, #48]	@ (80006d0 <__libc_init_array+0x44>)
 80006a0:	f000 f818 	bl	80006d4 <_init>
 80006a4:	1b64      	subs	r4, r4, r5
 80006a6:	10a4      	asrs	r4, r4, #2
 80006a8:	2600      	movs	r6, #0
 80006aa:	42a6      	cmp	r6, r4
 80006ac:	d105      	bne.n	80006ba <__libc_init_array+0x2e>
 80006ae:	bd70      	pop	{r4, r5, r6, pc}
 80006b0:	f855 3b04 	ldr.w	r3, [r5], #4
 80006b4:	4798      	blx	r3
 80006b6:	3601      	adds	r6, #1
 80006b8:	e7ee      	b.n	8000698 <__libc_init_array+0xc>
 80006ba:	f855 3b04 	ldr.w	r3, [r5], #4
 80006be:	4798      	blx	r3
 80006c0:	3601      	adds	r6, #1
 80006c2:	e7f2      	b.n	80006aa <__libc_init_array+0x1e>
 80006c4:	080006ec 	.word	0x080006ec
 80006c8:	080006ec 	.word	0x080006ec
 80006cc:	080006ec 	.word	0x080006ec
 80006d0:	080006f0 	.word	0x080006f0

080006d4 <_init>:
 80006d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006d6:	bf00      	nop
 80006d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006da:	bc08      	pop	{r3}
 80006dc:	469e      	mov	lr, r3
 80006de:	4770      	bx	lr

080006e0 <_fini>:
 80006e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006e2:	bf00      	nop
 80006e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006e6:	bc08      	pop	{r3}
 80006e8:	469e      	mov	lr, r3
 80006ea:	4770      	bx	lr
